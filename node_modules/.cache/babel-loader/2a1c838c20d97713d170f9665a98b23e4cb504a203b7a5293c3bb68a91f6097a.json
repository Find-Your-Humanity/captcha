{"ast":null,"code":"var _jsxFileName = \"/Users/kang-yeongmo/captcha/src/components/Captcha.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './Captcha.css';\nimport ImageCaptcha from './ImageCaptcha';\nimport WarmFeelingCaptcha from './WarmFeelingCaptcha';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Captcha = () => {\n  _s();\n  const [state, setState] = useState('initial');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [captchaCount, setCaptchaCount] = useState(0);\n  const checkboxRef = useRef(null);\n  const handleCheckboxClick = e => {\n    e.stopPropagation(); // 이벤트 버블링 방지\n    e.preventDefault(); // 기본 동작 방지\n\n    if (state === 'initial') {\n      setState('loading');\n      // 시뮬레이션을 위한 로딩 시간\n      setTimeout(() => {\n        // 랜덤하게 성공 또는 실패\n        const isSuccess = Math.random() > 0.5;\n        if (isSuccess) {\n          setState('success');\n          // 성공 후 1초 뒤에 캡차를 번갈아가면서 표시\n          setTimeout(() => {\n            setCaptchaCount(prev => {\n              const newCount = prev + 1;\n              if (newCount % 2 === 0) {\n                setState('image-captcha');\n              } else {\n                setState('warm-feeling-captcha');\n              }\n              return newCount;\n            });\n          }, 1000);\n        } else {\n          setState('error');\n          setErrorMessage('잘못된 선택입니다. 다시 확인해주세요.');\n        }\n      }, 2000);\n    } else if (state === 'error') {\n      setState('initial');\n      setErrorMessage('');\n    }\n  };\n  const handleCaptchaSuccess = () => {\n    // 캡차 성공 시 다시 체크박스 상태로 돌아감\n    setState('initial');\n    // captchaCount는 이미 증가되어 있으므로 여기서는 증가시키지 않음\n  };\n  const handleButtonClick = e => {\n    // 체크박스 영역이 아닌 곳을 클릭한 경우\n    if (state === 'initial' && checkboxRef.current && !checkboxRef.current.contains(e.target)) {\n      // 새로고침 버튼 클릭은 제외\n      const target = e.target;\n      if (!target.closest('.refresh-button')) {\n        setState('error');\n        setErrorMessage('잘못된 선택입니다. 다시 확인해주세요.');\n      }\n    }\n  };\n  const handleRefresh = e => {\n    e.stopPropagation(); // 이벤트 버블링 방지\n    setState('initial');\n    setErrorMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"captcha-container\",\n    children: state === 'image-captcha' ? /*#__PURE__*/_jsxDEV(ImageCaptcha, {\n      onSuccess: handleCaptchaSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : state === 'warm-feeling-captcha' ? /*#__PURE__*/_jsxDEV(WarmFeelingCaptcha, {\n      onSuccess: handleCaptchaSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `captcha-button ${state}`,\n        onClick: handleButtonClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captcha-left\",\n          children: [state === 'initial' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox\",\n            ref: checkboxRef,\n            onClick: handleCheckboxClick,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-inner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), state === 'loading' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-text\",\n              children: \"LOADING...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), state === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-check\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"24\",\n              height: \"24\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\",\n                fill: \"#4CAF50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), state === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox error\",\n            ref: checkboxRef,\n            onClick: handleCheckboxClick,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox-inner error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captcha-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"captcha-text\",\n            children: \"I'm not a robot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captcha-right\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"refresh-button\",\n            onClick: handleRefresh,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\",\n                fill: \"#666\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), state === 'error' && errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Captcha, \"NvAyZ04qC6WtF8nSrwPMicsHvHg=\");\n_c = Captcha;\nexport default Captcha;\nvar _c;\n$RefreshReg$(_c, \"Captcha\");","map":{"version":3,"names":["React","useState","useRef","ImageCaptcha","WarmFeelingCaptcha","jsxDEV","_jsxDEV","Fragment","_Fragment","Captcha","_s","state","setState","errorMessage","setErrorMessage","captchaCount","setCaptchaCount","checkboxRef","handleCheckboxClick","e","stopPropagation","preventDefault","setTimeout","isSuccess","Math","random","prev","newCount","handleCaptchaSuccess","handleButtonClick","current","contains","target","closest","handleRefresh","className","children","onSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","width","height","viewBox","fill","d","_c","$RefreshReg$"],"sources":["/Users/kang-yeongmo/captcha/src/components/Captcha.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Captcha.css';\nimport ImageCaptcha from './ImageCaptcha';\nimport WarmFeelingCaptcha from './WarmFeelingCaptcha';\nimport HandwritingCaptcha from './HandwritingCaptcha';\n\ntype CaptchaState = 'initial' | 'loading' | 'success' | 'error' | 'image-captcha' | 'warm-feeling-captcha' | 'handwriting-captcha';\n\nconst Captcha: React.FC = () => {\n  const [state, setState] = useState<CaptchaState>('initial');\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [captchaCount, setCaptchaCount] = useState<number>(0);\n  const checkboxRef = useRef<HTMLDivElement>(null);\n\n  const handleCheckboxClick = (e: React.MouseEvent) => {\n    e.stopPropagation(); // 이벤트 버블링 방지\n    e.preventDefault(); // 기본 동작 방지\n    \n    if (state === 'initial') {\n      setState('loading');\n      // 시뮬레이션을 위한 로딩 시간\n      setTimeout(() => {\n        // 랜덤하게 성공 또는 실패\n        const isSuccess = Math.random() > 0.5;\n        if (isSuccess) {\n          setState('success');\n          // 성공 후 1초 뒤에 캡차를 번갈아가면서 표시\n          setTimeout(() => {\n            setCaptchaCount(prev => {\n              const newCount = prev + 1;\n              if (newCount % 2 === 0) {\n                setState('image-captcha');\n              } else {\n                setState('warm-feeling-captcha');\n              }\n              return newCount;\n            });\n          }, 1000);\n        } else {\n          setState('error');\n          setErrorMessage('잘못된 선택입니다. 다시 확인해주세요.');\n        }\n      }, 2000);\n    } else if (state === 'error') {\n      setState('initial');\n      setErrorMessage('');\n    }\n  };\n\n  const handleCaptchaSuccess = () => {\n    // 캡차 성공 시 다시 체크박스 상태로 돌아감\n    setState('initial');\n    // captchaCount는 이미 증가되어 있으므로 여기서는 증가시키지 않음\n  };\n\n  const handleButtonClick = (e: React.MouseEvent) => {\n    // 체크박스 영역이 아닌 곳을 클릭한 경우\n    if (state === 'initial' && checkboxRef.current && !checkboxRef.current.contains(e.target as Node)) {\n      // 새로고침 버튼 클릭은 제외\n      const target = e.target as HTMLElement;\n      if (!target.closest('.refresh-button')) {\n        setState('error');\n        setErrorMessage('잘못된 선택입니다. 다시 확인해주세요.');\n      }\n    }\n  };\n\n  const handleRefresh = (e: React.MouseEvent) => {\n    e.stopPropagation(); // 이벤트 버블링 방지\n    setState('initial');\n    setErrorMessage('');\n  };\n\n  return (\n    <div className=\"captcha-container\">\n      {state === 'image-captcha' ? (\n        <ImageCaptcha onSuccess={handleCaptchaSuccess} />\n      ) : state === 'warm-feeling-captcha' ? (\n        <WarmFeelingCaptcha onSuccess={handleCaptchaSuccess} />\n      ) : (\n        <>\n          <div className={`captcha-button ${state}`} onClick={handleButtonClick}>\n            <div className=\"captcha-left\">\n              {state === 'initial' && (\n                <div className=\"checkbox\" ref={checkboxRef} onClick={handleCheckboxClick}>\n                  <div className=\"checkbox-inner\"></div>\n                </div>\n              )}\n              {state === 'loading' && (\n                <div className=\"loading-spinner\">\n                  <div className=\"spinner\"></div>\n                  <span className=\"loading-text\">LOADING...</span>\n                </div>\n              )}\n              {state === 'success' && (\n                <div className=\"success-check\">\n                  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                    <path\n                      d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"\n                      fill=\"#4CAF50\"\n                    />\n                  </svg>\n                </div>\n              )}\n              {state === 'error' && (\n                <div className=\"checkbox error\" ref={checkboxRef} onClick={handleCheckboxClick}>\n                  <div className=\"checkbox-inner error\"></div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"captcha-center\">\n              <span className=\"captcha-text\">I'm not a robot</span>\n            </div>\n            \n            <div className=\"captcha-right\">\n              <button className=\"refresh-button\" onClick={handleRefresh}>\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n                  <path\n                    d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n                    fill=\"#666\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n          \n          {state === 'error' && errorMessage && (\n            <div className=\"error-message\">{errorMessage}</div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Captcha; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}